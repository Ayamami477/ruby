class  MyClac
 def initialize(s)
    @s = s
    @p = 0
end

def run
    @p=0
    return self.expr
end

def expr
    v1 = term
    while(@s[@p] == '+' || @s[@p] == '-')
    op = @s[@p]
    @p +=1
    v2 = term
    v1 = op == '+' ? v1 + v2 : v1-v2
    end
    return v1
end

def term
    v1 = fact
    while(@s[@p] == '*'|| @s[@p] == '/')
      op = @s[@p] 
      @p += 1
      v2 = fact
      v1 = op == "*" ? v1 * v2 : v1 / v2
      end
      return v1
    end   

    def fact
        value = 0
        if @s[@p] =~ /\A-?\d*Z/
            while @s[@p] =~ /\A-?\d*\Z/
                value = value * 10 + @s[@p].to_i
                @p+=1
             end
           else
            @p+=1
            value = expr
            @p+=1
           end
           return value
        end
     end
     
     while (s=gets.chomp)!='q'
        mc = MyClac.new(s)
        puts mc.run
     end   